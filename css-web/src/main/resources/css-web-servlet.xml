<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	<context:annotation-config />
	
	<!-- Import dubbo Bean -->
	<import resource="classpath*:css-web-dubbo.xml" />
    <import resource="classpath*:css-service-appcontext.xml" />
    <import resource="classpath*:oa-auth-client-appcontext.xml" />
   
    <!-- 注册中心配置 -->  
  	<dubbo:registry address="${dubbo.registry.address}" />
<!--   	本地调试使用  -->
<!--     <dubbo:registry address="zookeeper://127.0.0.1:2181" /> -->
	<dubbo:application name="order-service" />
  	<dubbo:protocol name="dubbo"/>

    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!--  
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.loukou.css.interceptor.WhInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
    -->
    
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.loukou.auth.core.interceptor.AuthInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
    
    
    <mvc:annotation-driven />
  	<context:component-scan base-package="com.loukou.css" />
	<context:component-scan base-package="com.loukou.auth.core" />

    <!-- Only needed because we require file upload in the org.springframework.samples.mvc.fileupload 
        package -->
<!--     <bean id="multipartResolver" -->
<!--         class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!-- 		<property name="defaultEncoding" value="UTF-8"/> -->
<!-- 		<property name="uploadTempDir" value="resources/temp/upload"/> -->
<!--     </bean> -->

	<!-- freemarker的配置 --> 
	 <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
	   <property name="templateLoaderPath" value="/WEB-INF/view/" /> 
	   <property name="defaultEncoding" value="utf-8" /> 
	   <property name="freemarkerSettings"> 
	   <props> 
	    <prop key="template_update_delay">10</prop> 
	    <prop key="locale">zh_CN</prop> 
	    <prop key="datetime_format">yyyy-MM-dd</prop> 
	    <prop key="date_format">yyyy-MM-dd</prop> 
	    <prop key="number_format">#.##</prop> 
	   </props>
	  </property> 
	 </bean> 
	 <!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。--> 
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
	     
	  <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property> 
	     
	  <property name="suffix" value=".ftl" /> 
	  <property name="contentType" value="text/html;charset=utf-8" /> 
	  <property name="exposeRequestAttributes" value="true" /> 
	  <property name="exposeSessionAttributes" value="true" /> 
	  <property name="exposeSpringMacroHelpers" value="true" /> 
	 </bean>
	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<!-- 全局异常配置 end -->
</beans>